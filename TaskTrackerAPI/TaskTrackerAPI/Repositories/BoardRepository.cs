using System;
using System.Collections.Generic;
using System.Linq;
using TaskTrackerApi.Contracts.V1.Responses;
using TaskTrackerApi.Domain;

namespace TaskTrackerApi.Repositories
{
    public class BoardRepository : IBoardRepository
    {
        private readonly List<Board> _boards;
        
        public BoardRepository()
        {
            _boards = new List<Board>();
            InitBoards();
        }
        
        public List<Board> GetBoards()
        {
            return _boards;
        }

        public bool CreateBoard(Board board)
        {
            _boards.Add(board);
            return true;
        }

        private void InitBoards()
        {
            _boards.AddRange(new List<Board>
            {
                new Board
                {
                    Id = Guid.NewGuid(),
                    Name = "Task Tracker Project",
                    Description = "The project provides API for managing projects. Users can creates Boards with Cards and Also add tags to Cards. It is also possible to add new members to Boards.",
                    UserId = Guid.NewGuid().ToString(),
                    Cards = new List<Card>
                    {
                        new Card
                        {
                            Id = Guid.NewGuid(),
                            Name = "Collect project requirements",
                            UserId = Guid.NewGuid().ToString(),
                            Tags = new List<CardTag>()
                        },
                        new Card
                        {
                            Id = Guid.NewGuid(),
                            Name = "Create firs version of Project Plan",
                            UserId = Guid.NewGuid().ToString(),
                            Tags = new List<CardTag>()
                        }
                    },
                    // Members = new List<Member>
                    // {
                    //     new Member
                    //     {
                    //         Email = "kris@tasker.com",
                    //         UserName = "Kris Redfield"
                    //     },
                    //     new Member
                    //     {
                    //         Email = "alex@tasker.com",
                    //         UserName = "Alex Green"
                    //     }
                    // }
                },
                new Board
                {
                    Id = Guid.NewGuid(),
                    Name = "Microscope monitoring using the ELK stack",
                    Description = "The project aim is to provide an open-source alternative to the proprietary code that collects, stores and analyses operational information generated by microscope control software using open source tools such as the ELK stack.",
                    UserId = Guid.NewGuid().ToString(),
                    Cards = new List<Card>
                    {
                        new Card
                        {
                            Id = Guid.NewGuid(),
                            Name = "Investigate the ELK components (Elastic Search, Logstash, Kibana)",
                            UserId = Guid.NewGuid().ToString(),
                            Tags = new List<CardTag>()
                        },
                        new Card
                        {
                            Id = Guid.NewGuid(),
                            Name = "Install Data Services",
                            UserId = Guid.NewGuid().ToString(),
                            Tags = new List<CardTag>()
                        }
                    },
                    // Members = new List<Member>
                    // {
                    //     new Member
                    //     {
                    //         Email = "arjen@tasker.com",
                    //         UserName = "Arjen Clompt"
                    //     },
                    //     new Member
                    //     {
                    //         Email = "henk@tasker.com",
                    //         UserName = "Henk van den Heuvel"
                    //     }
                    // }
                }
            });
        }
    }
}